{"/home/travis/build/npmtest/node-npmtest-anyfs/test.js":"/* istanbul instrument in package npmtest_anyfs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-anyfs/lib.npmtest_anyfs.js":"/* istanbul instrument in package npmtest_anyfs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_anyfs = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_anyfs = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-anyfs/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-anyfs && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_anyfs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_anyfs\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_anyfs.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_anyfs.rollup.js'] =\n            local.assetsDict['/assets.npmtest_anyfs.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_anyfs.__dirname +\n                    '/lib.npmtest_anyfs.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/index.js":"var AnyFS = require('./lib/anyfs');\nAnyFS.MemoryAdapter = require('./lib/adapters/memory');\nAnyFS.test = require('./lib/test');\n\nmodule.exports = AnyFS;","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/anyfs.js":"var path = require('path');\nvar util = require('util');\nvar when = require('when');\nvar nodefn = require('when/node');\nvar CorePlugin = require('./plugins/core/');\n\nmodule.exports = AnyFS;\n\nfunction AnyFS(adapter, options) {\n    this.options = options || {};\n    this.options.cwd = this.options.cwd || '/';\n    this.options.root = this.options.root || '/';\n\n    if (this.options.cwd[0] !== '/') {\n        throw new Error('cwd must be absolute(start with \"/\")');\n    }\n\n    if (this.options.root[0] !== '/') {\n        throw new Error('root must be absolute(start with \"/\")');\n    }\n\n    if (this.options.root !== '/') {\n        throw new Error('root is not supported yet');\n    }\n\n    this.adapter = adapter;\n\n    this.adapter.features = this.adapter.features || {};\n\n    this._plugins = [];\n\n    // add global plugins\n    for (var i = 0, length = AnyFS._plugins.length; i < length; i++) {\n        this.addPlugin(AnyFS._plugins[i]);\n    }\n}\n\nAnyFS._plugins = [];\n\n/**\n * Add a global plugin\n * @param {Plugin} plugin\n */\nAnyFS.addPlugin = function(plugin) {\n    AnyFS._plugins.push(plugin);\n}\n\n/**\n * Add a plugin\n * @param {Plugin} plugin\n */\nAnyFS.prototype.addPlugin = function(plugin) {\n    this._plugins.push(plugin);\n    plugin.register(this);\n};\n\nAnyFS.prototype.getPlugins = function() {\n    return this._plugins;\n};\n\n/**\n * Resolve absolute path (considered root and cwd), path cleanup\n * @return {String}\n */\nAnyFS.prototype.resolve = function() {\n    var args = Array.prototype.slice.call(arguments);\n    args.unshift(this.options.cwd);\n    \n    var p = path.resolve.apply(null, args);\n    p = path.join(this.options.root, p);\n\n    // fix windows\n    p = p.replace(/[\\\\\\/]+/g, '/');\n\n    // remove ending slash\n    if (p.length > 1 && p[p.length - 1] === '/') {\n        p = p.substr(0, p.length - 1);\n    }\n\n    return p;\n};\n\n/**\n * Create standard error\n * @param  {String} code    Error code\n * @param  {String} message Error message\n * @return {Error}\n */\nAnyFS.prototype.error = function(code, message) {\n    var err = new Error(message);\n    err.code = code;\n\n    return err;\n};\n\n/**\n * Create promise\n * @return {Object}\n */\nAnyFS.prototype._promise = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var fn;\n    var context = this;\n    if (args.length === 0) {\n        fn = function(cb) {cb()};\n    } else {\n        fn = args.shift();\n        if (util.isArray(fn)) {\n            if (fn.length !== 2) {\n                throw new Error('Invalid callback');\n            }\n            context = fn[0];\n            fn = fn[1];\n        }\n    }\n\n    return nodefn.lift(fn).apply(context, args).with(this);\n};\n\n// always add core plugin\nAnyFS.addPlugin(new CorePlugin());","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/index.js":"'use strict';\n\nvar streamContent = require('stream-content');\nvar deleteIt = require('./delete');\nvar mkdir = require('./mkdir');\nvar move = require('./move');\nvar writeFile = require('./writeFile');\nvar streamhelper = require('./streamhelper');\nvar nodeFS = require('fs');\n\nmodule.exports = Plugin;\n\n/**\n * Core filesystem plugin\n */\nfunction Plugin() {\n\n}\n\nfunction error(code, message) {\n    var err = new Error(message);\n    err.code = code;\n\n    return err;\n}\n\nPlugin.prototype.register = function(fs) {\n\n    /**\n     * Experimental API, use metadata instead.\n     * @param  {String}   p Path to file or directory\n     * @param  {Function} cb\n     */\n    fs.stat = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.stat);\n        }\n\n        this.metadata(p)\n            .done(function(metadata) {\n                var stats = new nodeFS.Stats();\n                stats.size = metadata.size;\n                stats.atime = stats.mtime = stats.ctime = new Date(metadata.time);\n                stats.mode = metadata.is_dir?\n                  16895 // 040777\n                  :\n                  33279; //0100777\n                cb(null, stats);\n            }, cb);\n    };\n\n    fs.metadata = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.metadata, p);\n        }\n\n        p = this.resolve(p);\n\n        this.adapter.metadata(p, cb);\n    };\n\n    fs.list = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.list, p);\n        }\n\n        p = this.resolve(p);\n        this.adapter.list(p, cb);\n    }\n\n    fs.delete = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.delete, p);\n        }\n\n        p = this.resolve(p);\n\n        if (p === '/') {\n            return error('ELOGIC', 'Cannot delete root path');\n        }\n\n        this.adapter.delete(p, cb);\n    }\n\n    fs.deleteDir = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.deleteDir, p);\n        }\n\n        p = this.resolve(p);\n\n        if (p === '/') {\n            return error('ELOGIC', 'Cannot delete root path');\n        }\n\n        if (this.adapter.features.DELETE_RECURSIVE) {\n            return this.adapter.deleteDir(p, cb);\n        } \n\n        deleteIt(this, p, [this.adapter, this.adapter.deleteDir], cb);\n    };\n\n    fs.mkdir = function(p, cb) {\n        if (!cb) {\n            return this._promise(this.mkdir, p);\n        }\n\n        p = this.resolve(p);\n\n        if (p === '/') {\n            return cb();\n        }\n\n        if (this.adapter.features.MKDIR_RECURSIVE) {\n            return this.adapter.mkdir(p, cb);\n        }\n\n        mkdir(this, p, [this.adapter, this.adapter.mkdir], cb);\n    }\n\n    fs.move = function(a, b, cb) {\n        if (!cb) {\n            return this._promise(this.move, a, b);\n        }\n\n        a = this.resolve(a);\n        b = this.resolve(b);\n\n        if (a === b) {\n            return cb(new Error('Cannot move to same the same path', 'ELOGIC'));\n        }\n\n        if (a === '/' || b === '/') {\n            return cb(new Error('Cannot move root', 'ELOGIC'));\n        }\n\n        if (b.indexOf(a + '/') === 0) {\n            return cb(new Error('Cannot move to child directory', 'ELOGIC'));\n        }\n\n        move(this, a, b, [this.adapter, this.adapter.move], cb);\n    };\n\n    fs.readFile = function(p, options, cb) {\n        if (typeof options === 'function') {\n            cb = options;\n            options = undefined;\n        }\n\n        if (!cb) {\n            return this._promise(this.readFile, p, options);\n        }\n\n        options = options || {};\n\n        var cb1 = cb;\n        cb = function(err, data) {\n            if (err) {\n                return cb1(err);\n            }\n\n            if (options.encoding) {\n                data = data.toString(options.encoding);\n            }\n            cb1(null, data);\n        }\n\n        p = this.resolve(p);\n\n        if (this.adapter.readFile) {\n            return this.adapter.readFile(p, cb);\n        }\n\n        try {\n            var rs = streamhelper.fixReadStream([this.adapter, this.adapter.createReadStream], p);\n            streamContent.readAll(rs, cb);\n        }\n        catch (e1) {\n            cb(e1);\n        }\n    };\n\n    fs.writeFile = function(p, data, options, cb) {\n        if (typeof options === 'function') {\n            cb = options;\n            options = undefined;\n        }\n\n        if (!cb) {\n            return this._promise(this.writeFile, p, data, options);\n        }\n\n        options = options || {};\n        p = this.resolve(p);\n\n        // transform data to buffer\n        if (typeof data === 'string') {\n            data = new Buffer(data, options.encoding);\n        }\n\n        var writeMethod;\n        if (this.adapter.writeFile) {\n            writeMethod = [this.adapter, this.adapter.writeFile];\n        } else {\n            var ws = streamhelper.fixWriteStream([this.adapter, this.adapter.createWriteStream], p);\n            writeMethod = function(p, data, cb) {\n                streamContent.writeAll(ws, data, cb);\n            }\n        }\n        \n        writeFile(this, p, data, writeMethod, cb);\n    };\n\n    fs.createReadStream = function(p, options) {\n        p = this.resolve(p);\n        options = options || {};\n\n        if (this.adapter.createReadStream) {\n            return streamhelper.fixReadStream([this.adapter, this.adapter.createReadStream], p);\n        }\n\n        var self = this;\n        return streamContent.createReadStreamFromCallback(function(cb) {\n            self.adapter.readFile(p, cb);\n        });\n    };\n\n    fs.createWriteStream = function(p, options) {\n        p = this.resolve(p);\n        options = options || {};\n\n        if (this.adapter.createWriteStream) {\n            return streamhelper.fixWriteStream([this.adapter, this.adapter.createWriteStream], p);\n        }\n\n        var self = this;\n        return streamContent.createWriteStreamFromCallback(function(content, cb) {\n            self.adapter.writeFile(p, content, cb);\n        });\n    };\n};\n\nPlugin.prototype.test = require('./test');","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/delete.js":"var when = require('when');\nvar nodefn = require('when/node');\n\nmodule.exports = deleteIt;\n\n// delete directory(recursively) - expensive way.\nfunction deleteIt(fs, p, method, cb) {\n    fs.metadata(p)\n    .then(function(metadata) {\n        if (!metadata.is_dir) {\n            throw fs.error('ENOTDIR');\n        }\n\n        return fs.list(p)\n        .then(function(list) {\n            return when.all(list.map(function(metadata) {\n                if (metadata.is_dir) {\n                    return resolveDelete(fs, p + '/' + metadata.name, method);\n                } else {\n                    return fs.delete(p + '/' + metadata.name);\n                }\n            }));\n        })\n        .then(function() {\n            return fs._promise(method, p);\n        });\n    })\n    .done(cb, cb);\n}\n\nvar resolveDelete = nodefn.lift(deleteIt);","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/mkdir.js":"'use strict';\n\nvar path = require('path');\nmodule.exports = mkdir;\n\n// mkdirP - expensive way.\nfunction mkdir(fs, p, method, cb) {\n    fs.metadata(p)\n    .then(function(metadata) {\n        if (!metadata.is_dir) {\n            throw fs.error('EEXIST', 'File already exist at ' + p);\n        }\n    }, function(e) {\n        // try mkdir if not exist\n        if (e.code === 'ENOENT') {\n            var parent = path.dirname(p);\n\n            return this.mkdir(parent)\n                .then(function() {\n                    return this._promise(method, p);\n                });\n        } else {\n            throw e;\n        }\n    })\n    .done(function() {\n        cb();\n    }, function(err) {\n        cb(err);\n    });\n}","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/move.js":"var path = require('path');\n\n\nmodule.exports = move;\n\n// move file or directory - expensive way.\nfunction move(fs, a, b, method, cb) {\n    var parentA = path.dirname(a);\n    var parentB = path.dirname(b);\n    var nameA = path.basename(a);\n    var nameB = path.basename(b)\n\n    fs.metadata(a)\n    .then(function(metadata) {\n        return this.metadata(b)\n            .then(function(metadata) {\n                throw fs.error('EEXIST', 'Cannot move because target path already exist: ' + b);\n            }, function(err) {\n                if (err.code === 'ENOENT') {\n                    return this.mkdir(parentB);\n                } else {\n                    throw err;\n                }\n            });\n    })\n    .then(function() {\n        return this._promise(method, a, b);\n    })\n    .done(function() {\n        cb();\n    }, function(err) {\n        cb(err);\n    });\n}","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/writeFile.js":"var path = require('path');\n\nmodule.exports = writeFile;\n\n// write file - expensive way.\nfunction writeFile(fs, p, content, method, cb) {\n    fs.metadata(p)\n    .then(function(metadata) {\n        if (metadata.is_dir) {\n            throw fs.error('EISDIR');\n        }\n    }, function(e) {\n        if (e.code === 'ENOENT') {\n            var parent = path.dirname(p);\n            return this.mkdir(parent);\n        } else {\n            throw e;\n        }\n    })\n    .then(function() {\n        return this._promise(method, p, content);\n    })\n    .done(cb, cb);\n}","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/streamhelper.js":"'use strict';\nvar util = require('util');\nvar Readable = require('stream').Readable;\nvar Writable = require('stream').Writable;\nvar PassThrough = require('stream').PassThrough;\n\nfunction fixReadStream() {\n    var args = Array.prototype.slice.call(arguments);\n    var pt = PassThrough();\n\n    function cb(err, rs) {\n        if (err) {\n            pt.emit('error', err);\n        } else {\n            rs.pipe(pt);\n        }\n    }\n\n    args.push(cb);\n\n    var creator = args.shift();\n\n    var context = null;\n    if (util.isArray(creator)) {\n        context = creator[0];\n        creator = creator[1];\n    }\n\n    var result = creator.apply(context, args);\n    if (result instanceof Readable) {\n        return result;\n    }\n\n    return pt;\n}\n\nfunction fixWriteStream() {\n    var args = Array.prototype.slice.call(arguments);\n    args.push(cb);\n\n    var creator = args.shift();\n\n    var context = null;\n    if (util.isArray(creator)) {\n        context = creator[0];\n        creator = creator[1];\n    }\n\n    var pt = PassThrough();\n\n    var result = creator.apply(context, args);\n    if (result instanceof Writable) {\n        return result;\n    }\n\n    function cb(err, ws) {\n        if (err) {\n            pt.emit('error', err);\n        } else {\n            pt.pipe()\n            ws.pipe(pt);\n        }\n    }\n\n    return pt;\n}\n\nmodule.exports = {\n    fixReadStream: fixReadStream,\n    fixWriteStream: fixWriteStream,\n};","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/plugins/core/test.js":"'use strict';\n\nvar when = require('when');\nvar sequence = require('when/sequence');\nvar parallel = require('when/parallel');\nvar should = require('should');\n\nmodule.exports = function(fs, options) {\n    function shouldFileExist(path, done) {\n        fs.metadata(path, function(err, metadata) {\n            should(err).not.be.ok;\n            should(metadata.is_dir).be.false;\n            done();\n        });\n    }\n\n    function shouldDirectoryExist(path, done) {\n        fs.metadata(path, function(err, metadata) {\n            should(err).not.be.ok;\n            should(metadata.is_dir).be.true;\n            done();\n        })\n    }\n\n    function shouldNotExist(path, done) {\n        fs.metadata(path, function(err, metadata) {\n            should(err).be.an.Error;\n            should(err).have.property('code', 'ENOENT');\n            done();\n        });\n    }\n\n    describe('core', function() {\n        before(function(done) {\n            setTimeout(function() {\n                fs.mkdir('tmp', done);\n            }, options.delay?options.delay:0);\n        });\n\n        after(function(done) {\n            fs.deleteDir('tmp', done);\n        });\n\n\n        describe('mkdir', function() {\n            before(function(done) {\n                fs.writeFile('tmp/mkdirfile', 'a', done);\n            });\n\n            it('should mkdir ok', function(done) {\n                fs.mkdir('tmp/mkdir', function(err) {\n                    should(err).not.be.ok;\n                    shouldDirectoryExist('tmp/mkdir', done);\n                });\n            });\n\n            it('should mkdir fail on exist file', function(done) {\n                fs.mkdir('tmp/mkdirfile', function(err) {\n                    should(err).be.an.Error;\n                    should(err).have.property('code', 'EEXIST');\n                    done();\n                })\n            });\n        });\n\n        describe('delete file', function() {\n            before(function(done) {\n                fs.writeFile('tmp/delete/file.txt', 'file.txt', done);\n            });\n\n            fs.adapter.features.DELETE_IGNORE_EMPTY || it('should delete none exist file fail', function(done) {\n                fs.delete('tmp/delete/none_exists', function(err) {\n                    should(err).be.an.Error;\n                    should(err).have.property('code', 'ENOENT');\n                    done();\n                });\n            });\n\n            it('should delete file ok', function(done) {\n                fs.delete('tmp/delete/file.txt', function(err) {\n                    should(err).not.be.ok;\n                    shouldNotExist('tmp/delete/file.txt', done);\n                });\n            });\n\n        });\n\n        describe('delete directory', function() {\n            before(function(done) {\n                fs.mkdir('tmp/deleteDir/dir1')\n                .then(function() {\n                    return fs.mkdir('tmp/deleteDir/dir2')\n                })\n                .done(function() {\n                    done();\n                }, done);\n            });\n\n            fs.adapter.features.DELETE_IGNORE_EMPTY || it('should delete none exist directory fail', function(done) {\n                fs.delete('tmp/deleteDir/none_exists', function(err) {\n                    should(err).be.an.Error;\n                    should(err).have.property('code', 'ENOENT');\n                    done();\n                });\n            });\n\n\n            it('should delete directory OK', function(done) {\n                fs.deleteDir('tmp/deleteDir/dir1', function(err) {\n                    should(err).not.be.ok;\n                    shouldNotExist('tmp/deleteDir/dir1', done);\n                });\n            });\n        });\n\n        describe('move', function() {\n            before(function(done) {\n                fs.mkdir('tmp/move/dir1')\n                .then(function() {\n                    return when.all([\n                        fs.writeFile('tmp/move/file', 'file'),\n                        fs.writeFile('tmp/move/file1', 'file1'),\n                        fs.writeFile('tmp/move/file2', 'file2'),\n                        fs.writeFile('tmp/move/file3', 'file3')\n                    ])\n                })\n                .done(function() {\n                    done();\n                }, done);\n            });\n\n            it('should new path not exist', function(done) {\n                fs.move('tmp/move/file1', 'tmp/move/file', function(err) {\n                    should(err).be.an.Error; \n                    should(err).have.property('code', 'EEXIST');\n                    done();\n                });\n            });\n            \n            it('should old path exist', function(done) {\n                fs.move('tmp/move/none_exists', 'tmp/move/none_exists1', function(err) {\n                    should(err).be.an.Error;\n                    should(err).have.property('code', 'ENOENT');\n                    done();\n                });\n            });\n\n            it('should move file ok', function(done) {\n                fs.move('tmp/move/file2', 'tmp/move/file22', function(err) {\n                    should(err).not.be.ok;\n                    shouldFileExist('tmp/move/file22', done);\n                });\n            });\n\n            it('should move dir ok', function(done) {\n                fs.move('tmp/move/dir1', 'tmp/move/dir11', function(err) {\n                    should(err).not.be.ok;\n                    shouldDirectoryExist('tmp/move/dir11', done);\n                });\n            });\n        });\n\n        describe('writeFile', function() {\n            it('should writeFile ok', function(done) {\n                fs.writeFile('tmp/writeFile', 'abc', function(err) {\n                    should(err).not.be.ok;\n                    shouldFileExist('tmp/writeFile', done);\n                });\n            });\n        });\n\n        describe('readFile', function() {\n            before(function(done) {\n                fs.writeFile('tmp/readFile', 'abc', done);\n            });\n\n            it('should readFile ok', function(done) {\n                fs.readFile('tmp/readFile', function(err, data) {\n                    should(err).not.be.ok;\n                    should(data.toString()).be.exactly('abc');\n                    done();\n                });\n            });\n        });\n\n        describe('stream', function() {\n            before(function(done) {\n                fs.writeFile('tmp/stream/a.js', 'a.js', done);\n            });\n\n            it('should pipe ok', function(done) {\n                fs.createReadStream('tmp/stream/a.js')\n                .pipe(fs.createWriteStream('tmp/stream/b.js'))\n                .on('error', function(err) {\n                    done(err);\n                })\n                .on('finish', function() {\n                    fs.readFile('tmp/stream/b.js', function(err, data) {\n                        should(err).not.be.ok;\n                        should(data.toString()).be.exactly('a.js');\n                        done();\n                    })\n                });\n            })\n        });\n\n        describe('metadata', function() {\n            before(function(done) {\n                fs.mkdir('tmp/metadata/a')\n                .then(function() {\n                    return fs.mkdir('tmp/metadata/b');\n                })\n                .then(function() {\n                    return fs.mkdir('tmp/metadata/c');\n                })\n                .then(function() {\n                    return when.all([\n                        fs.writeFile('tmp/metadata/d.js', 'd.js'),\n                    ]);\n                })\n                .done(function() {\n                    done();\n                }, done);\n            });\n\n            it('should file metadata ok', function(done) {\n                fs.metadata('tmp/metadata/d.js', function(err, metadata) {\n                    should(err).not.be.an.Error;\n                    should(metadata).have.property('name', 'd.js');\n                    should(metadata).have.property('is_dir', false);\n                    should(metadata).have.property('size', 4);\n                    should(metadata).have.property('time');\n                    should(metadata).be.an.Date;\n                    done();\n                });\n            });\n\n            it('should metadata of none exist dir fail', function(done) {\n                fs.metadata('none_exists', function(err, metadata) {\n                    should(err).be.an.Error;\n                    should(err).have.property('code', 'ENOENT');\n                    should(metadata).not.be.ok;\n                    done();\n                });\n            });\n        });\n\n        describe('list', function() {\n            before(function(done) {\n                fs.mkdir('tmp/list/a')\n                .then(function() {\n                    return fs.mkdir('tmp/list/b');\n                })\n                .then(function() {\n                    return fs.mkdir('tmp/list/c');\n                })\n                .then(function() {\n                    return when.all([\n                        fs.writeFile('tmp/list/d.js', 'd.js'),\n                        fs.writeFile('tmp/list/c/e.js', 'e.js'),\n                        fs.writeFile('tmp/list/c/f.js', 'f.js'),                \n                    ])\n                })\n                .done(function() {\n                    done();\n                }, done);\n            });\n\n            it('should list ok', function(done) {\n                fs.list('tmp/list', function(err, list) {\n                    should(err).not.be.ok;\n                    should(list).be.an.Array;\n                    should(list.map(function(info) {return info.name;})).eql(['a', 'b', 'c', 'd.js']);\n                    done();\n                });\n            });\n\n            it('should deep list ok', function(done) {\n                fs.list('tmp/list/c', function(err, list) {\n                    should(err).not.be.ok;\n                    should(list).be.an.Array;\n                    should(list.map(function(info) {return info.name;})).eql(['e.js', 'f.js']);\n                    done();\n                });\n            });\n        });\n    });\n}","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/adapters/memory.js":"'use strict';\n\nvar path = require('path');\nvar util = require('util');\n\nfunction error(code, message) {\n    var err = new Error(message);\n    err.code = code;\n\n    return err;\n}\n\nfunction isDir(node) {\n    return !Buffer.isBuffer(node);\n}\n\nfunction parseMetadata(name, node) {\n    var metadata = {\n        name: name\n    };\n\n    if (!isDir(node)) {\n        metadata.is_dir = false;\n        metadata.size = node.length;\n        metadata.time = node.time;\n    } else {\n        metadata.is_dir = true;\n    }\n\n    return metadata;\n}\n\nfunction Adapter() {\n    this.tree = {};\n}\n\nAdapter.prototype.features = {};\n\nAdapter.prototype._getByPath = function(tree, p) {\n    if (arguments.length === 1) {\n        p = tree;\n        tree = this.tree;\n    }\n    if (p === '') {\n        return null;\n    }\n\n    if (p === '/') {\n        return tree;\n    }\n\n    if (typeof p === 'string') {\n        p = p.split('/');\n    } else if (!util.isArray(p)) {\n        return null;\n    }\n\n    if (p.length === 0) {\n        return null;\n    }\n\n    var current = p.shift();\n    if (current === '') {\n        return this._getByPath(tree, p);\n    }\n\n    if (!tree.hasOwnProperty(current)) {\n        return null;\n    }\n\n    // found\n    if (p.length === 0) {\n        return tree[current];\n    } else {\n        return this._getByPath(tree[current], p);\n    }\n};\n\nAdapter.prototype.metadata = function(p, cb) {\n    var node = this._getByPath(p);\n    var name = path.basename(p);\n    if (!node) {\n        return cb(error('ENOENT'));\n    }\n\n    var metadata = parseMetadata(name, node);\n\n    cb(null, metadata);\n};\n\nAdapter.prototype.list = function(p, cb) {\n    var node = this._getByPath(p);\n    if (!node) {\n        return cb(error('ENOENT'));\n    }\n\n    if (!isDir(node)) {\n        return cb(error('ENOTDIR'));\n    }\n\n    var list = [];\n    for (var name in node) {\n        var metadata = parseMetadata(name, node[name]);\n        list.push(metadata);\n    }\n\n    cb(null, list);\n};\n\nAdapter.prototype.features.MKDIR_PASS_EXIST = true;\n\nAdapter.prototype.mkdir = function(p, cb) {\n    var parent = path.dirname(p);\n    var name = path.basename(p);\n\n    var parentNode = this._getByPath(parent);\n\n    if (!isDir(parentNode)) {\n        return cb(error('ELOGIC'));\n    }\n\n    // create directory on parent node\n    if (!parentNode.hasOwnProperty(name)) {\n        parentNode[name] = {};\n        return cb();\n    }\n\n    var node = parentNode[name];\n\n    if (isDir(node)) {\n        return cb();\n    }\n\n    return cb(error('EEXIST'));\n};\n\nAdapter.prototype.delete = function(p, cb) {\n    var parent = path.dirname(p);\n    var name = path.basename(p);\n\n    var parentNode = this._getByPath(parent);\n\n    if (!isDir(parentNode)) {\n        return cb(error('ENOENT', p));\n    }\n\n    if (!parentNode.hasOwnProperty(name)) {\n        return cb(error('ENOENT', p));\n    }\n\n    if (isDir(parentNode[name])) {\n        return cb(error('EISDIR', p));\n    }\n\n    delete parentNode[name];\n    cb();\n};\n\nAdapter.prototype.features.DELETE_RECURSIVE = true;\n\nAdapter.prototype.deleteDir = function(p, cb) {\n    var parent = path.dirname(p);\n    var name = path.basename(p);\n\n    var parentNode = this._getByPath(parent);\n\n    if (!isDir(parentNode)) {\n        return cb(error('ENOENT'));\n    }\n\n    if (!parentNode.hasOwnProperty(name)) {\n        return cb(error('ENOENT'));\n    }\n\n    if (!isDir(parentNode[name])) {\n        return cb(error('ENOTDIR'));\n    }\n\n    delete parentNode[name];\n    cb();\n};\n\nAdapter.prototype.move = function(a, b, cb) {\n    var parentA = path.dirname(a);\n    var parentB = path.dirname(b);\n    var nameA = path.basename(a);\n    var nameB = path.basename(b)\n\n    var aNode = this._getByPath(a);\n    if (!aNode) {\n        return cb(error('ENOENT'));\n    }\n\n    var parentANode = this._getByPath(parentA);\n    var parentBNode = this._getByPath(parentB);\n    if (!parentBNode) {\n        return cb(error('ENOENT'));\n    }\n\n    parentBNode[nameB] = parentANode[nameA];\n    delete parentANode[nameA];\n\n    cb();\n};\n\nAdapter.prototype.readFile = function(p, cb) {\n    var node = this._getByPath(p);\n\n    if (isDir(node)) {\n        return cb(error('EISDIR', p));\n    }\n\n    cb(null, node);\n};\n\nAdapter.prototype.writeFile = function(p, data, cb) {\n    var parent = path.dirname(p);\n    var filename = path.basename(p);\n\n    var parentNode = this._getByPath(parent);\n    if (!parentNode) {\n        return cb(error('ENOENT'));\n    }\n\n    var node = this._getByPath(p);\n    if (!node || !isDir(node)) {\n        data.time = new Date();\n        parentNode[filename] = data;\n        return cb();\n    }\n\n    cb(error('EISDIR', p));\n};\n\nmodule.exports = Adapter;","/home/travis/build/npmtest/node-npmtest-anyfs/node_modules/anyfs/lib/test.js":"'use strict';\nvar when = require('when');\nvar sequence = require('when/sequence');\nvar parallel = require('when/parallel');\nvar should = require('should');\nvar through = require('through2');\n\nmodule.exports = function(fs, options) {\n    options = options || {};\n    var plugins = fs.getPlugins();\n    for (var i = 0; i < plugins.length; i++) {\n        if (plugins[i].test) {\n            plugins[i].test(fs, options);\n        }\n    }\n};"}